import type React from "react"
import DashboardLayoutWrapper from "@/components/dashboard-layout-wrapper"
import RouteLoadingBar from "@/components/RouteLoadingBar"
import { ThemeProvider } from "@/components/theme-provider"
import { WalletProvider } from "@/contexts/WalletContext"
import { jwtDecode } from "jwt-decode"
import { cookies } from "next/headers"
import { redirect } from "next/navigation"

interface TokenDetailsType {
  userId: string
  firstName: string
  lastName: string
  email: string
  role: string
}

export async function generateMetadata() {
  const cookiesStore = await cookies()
  const userToken = cookiesStore.get("userToken")?.value
  let role = "User"
  try {
    if (userToken) {
      const decode: any = jwtDecode(userToken)
      if (decode.role === "user") role = "User"
    }
  } catch { }
  return {
    title: `Dashboard | Shipquickr - ${role} & Dashboard`,
    description: "Generated by create next app",
  }
}

export default async function Dashboard({ children }: { children: React.ReactNode }) {
  const cookieStore = await cookies()
  const token = cookieStore.get("userToken")?.value
  console.log("Token on server:", token)

  if (!token) {
    console.log("Token not found, redirecting...")
    redirect("/user/auth/login")
  }

  const decoded = jwtDecode<{ exp: number } & TokenDetailsType>(token)
  const isExpired = decoded.exp * 1000 < Date.now()

  if (isExpired) {
    console.error("Token expired, redirecting...")
    redirect("/user/auth/login")
  }

  const fullName = `${decoded.firstName} ${decoded.lastName}`

  return (
    <ThemeProvider attribute="class" defaultTheme="light" enableSystem disableTransitionOnChange>
      <WalletProvider>
        <div className="flex flex-col min-h-screen">
          <RouteLoadingBar />
          <DashboardLayoutWrapper userRole={decoded.role} userName={fullName}>
            {children}
          </DashboardLayoutWrapper>
        </div>
      </WalletProvider>
    </ThemeProvider>
  )
}